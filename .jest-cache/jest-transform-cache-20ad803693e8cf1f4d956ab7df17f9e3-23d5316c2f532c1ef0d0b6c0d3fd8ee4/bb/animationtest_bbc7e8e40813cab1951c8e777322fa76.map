{"version":3,"sources":["/mnt/c/Users/octav/Projetos/estaff-web/tests/unit/design-tokens/animation.test.ts"],"sourcesContent":["/**\n * Unit Tests for Design System Animation Tokens\n * Tests performance metrics, spring physics, and mathematical timing\n */\n\nimport { \n  durations,\n  easings,\n  springs,\n  keyframes,\n  transitions,\n  animations,\n  motionVariants,\n  createTransition,\n  createStaggerDelay,\n  generateAnimationVars,\n  type Duration,\n  type Easing,\n  type Spring,\n  type Animation,\n  type Transition\n} from '@/lib/design-system/tokens/animation'\n\ndescribe('Design System Animation Tokens', () => {\n  describe('Animation Durations', () => {\n    test('should have complete duration range', () => {\n      const expectedDurations = ['instant', 'fast', 'normal', 'slow', 'slower', 'slowest']\n      \n      expectedDurations.forEach(duration => {\n        expect(durations).toHaveProperty(duration)\n        expect(typeof durations[duration as keyof typeof durations]).toBe('number')\n      })\n      \n      // Check specific values\n      expect(durations.instant).toBe(0)\n      expect(durations.fast).toBe(150)\n      expect(durations.normal).toBe(300)\n      expect(durations.slow).toBe(500)\n      expect(durations.slower).toBe(700)\n      expect(durations.slowest).toBe(1000)\n    })\n\n    test('durations should increase progressively', () => {\n      const durationValues = [\n        durations.instant,\n        durations.fast,\n        durations.normal,\n        durations.slow,\n        durations.slower,\n        durations.slowest\n      ]\n      \n      for (let i = 0; i < durationValues.length - 1; i++) {\n        expect(durationValues[i + 1]).toBeGreaterThan(durationValues[i])\n      }\n    })\n\n    test('should have semantic durations for different use cases', () => {\n      expect(durations).toHaveProperty('micro', 50)     // Micro-interactions\n      expect(durations).toHaveProperty('quick', 200)    // Button clicks\n      expect(durations).toHaveProperty('moderate', 400) // Modals\n      expect(durations).toHaveProperty('deliberate', 600) // Page transitions\n      expect(durations).toHaveProperty('relaxed', 800)  // Lazy animations\n    })\n\n    test('should have stagger delay configurations', () => {\n      expect(durations.stagger).toHaveProperty('fast', 50)\n      expect(durations.stagger).toHaveProperty('normal', 100)\n      expect(durations.stagger).toHaveProperty('slow', 150)\n      \n      // Stagger values should increase progressively\n      expect(durations.stagger.normal).toBeGreaterThan(durations.stagger.fast)\n      expect(durations.stagger.slow).toBeGreaterThan(durations.stagger.normal)\n    })\n\n    test('durations should be optimized for 60fps performance', () => {\n      // Durations should be multiples of frame time (16.67ms) for smooth animations\n      const frameTime = 16.67 // 1000ms / 60fps\n      \n      Object.values(durations).forEach(duration => {\n        if (typeof duration === 'number' && duration > 0) {\n          // Duration should be reasonable for smooth animation\n          expect(duration).toBeGreaterThanOrEqual(50) // Minimum perceptible\n          expect(duration).toBeLessThanOrEqual(1200) // Maximum practical\n        }\n      })\n    })\n  })\n\n  describe('Easing Functions', () => {\n    test('should have basic CSS easing functions', () => {\n      expect(easings.linear).toBe('linear')\n      expect(easings.ease).toBe('ease')\n      expect(easings.easeIn).toBe('ease-in')\n      expect(easings.easeOut).toBe('ease-out')\n      expect(easings.easeInOut).toBe('ease-in-out')\n    })\n\n    test('should have custom cubic-bezier curves', () => {\n      const customEasings = ['premium', 'bounceIn', 'smooth', 'sharp']\n      \n      customEasings.forEach(easing => {\n        expect(easings).toHaveProperty(easing)\n        expect(easings[easing as keyof typeof easings]).toMatch(/^cubic-bezier\\([\\d\\.,\\s-]+\\)$/)\n      })\n      \n      // Check specific curves\n      expect(easings.premium).toBe('cubic-bezier(0.4, 0.0, 0.2, 1)')\n      expect(easings.bounceIn).toBe('cubic-bezier(0.68, -0.55, 0.265, 1.55)')\n    })\n\n    test('should have spring-like easings', () => {\n      const springEasings = ['spring', 'springOut', 'springIn']\n      \n      springEasings.forEach(easing => {\n        expect(easings).toHaveProperty(easing)\n        expect(easings[easing as keyof typeof easings]).toMatch(/^cubic-bezier\\([\\d\\.,\\s-]+\\)$/)\n      })\n    })\n\n    test('should have power curve easings', () => {\n      const powerEasings = ['power1', 'power2', 'power3', 'power4']\n      \n      powerEasings.forEach(easing => {\n        expect(easings).toHaveProperty(easing)\n        expect(easings[easing as keyof typeof easings]).toMatch(/^cubic-bezier\\([\\d\\.,\\s-]+\\)$/)\n      })\n      \n      // Power curves should have increasing aggressiveness\n      // This is validated by the curve values, but we can't easily parse them\n      expect(easings.power1).toBe('cubic-bezier(0.4, 0.0, 1, 1)')\n      expect(easings.power4).toBe('cubic-bezier(0.86, 0.0, 1, 1)')\n    })\n\n    test('cubic-bezier values should be mathematically valid', () => {\n      const customEasings = Object.entries(easings)\n        .filter(([key, value]) => value.startsWith('cubic-bezier'))\n      \n      customEasings.forEach(([name, curve]) => {\n        const match = curve.match(/cubic-bezier\\(([\\d\\.,\\s-]+)\\)/)\n        if (match) {\n          const values = match[1].split(',').map(v => parseFloat(v.trim()))\n          \n          // Should have 4 control points\n          expect(values).toHaveLength(4)\n          \n          // X values should be between 0 and 1 (time must be monotonic)\n          expect(values[0]).toBeGreaterThanOrEqual(0)\n          expect(values[0]).toBeLessThanOrEqual(1)\n          expect(values[2]).toBeGreaterThanOrEqual(0)\n          expect(values[2]).toBeLessThanOrEqual(1)\n          \n          // Y values can exceed 0-1 for bouncy effects\n          values.forEach(value => {\n            expect(value).toBeGreaterThanOrEqual(-2) // Reasonable lower bound\n            expect(value).toBeLessThanOrEqual(2)     // Reasonable upper bound\n          })\n        }\n      })\n    })\n  })\n\n  describe('Spring Physics', () => {\n    test('should have complete spring presets', () => {\n      const expectedSprings = [\n        'wobbly', 'stiff', 'gentle', 'slow', 'molasses',\n        'default', 'bounce', 'noWobble'\n      ]\n      \n      expectedSprings.forEach(spring => {\n        expect(springs).toHaveProperty(spring)\n        \n        const springConfig = springs[spring as keyof typeof springs]\n        expect(springConfig).toHaveProperty('stiffness')\n        expect(springConfig).toHaveProperty('damping')\n        \n        expect(typeof springConfig.stiffness).toBe('number')\n        expect(typeof springConfig.damping).toBe('number')\n      })\n    })\n\n    test('spring physics values should be realistic', () => {\n      Object.entries(springs).forEach(([name, config]) => {\n        // Stiffness should be positive and reasonable\n        expect(config.stiffness).toBeGreaterThan(0)\n        expect(config.stiffness).toBeLessThan(1000) // Realistic upper bound\n        \n        // Damping should be positive and reasonable\n        expect(config.damping).toBeGreaterThan(0)\n        expect(config.damping).toBeLessThan(200) // Prevent over-damping\n        \n        // Higher stiffness should generally correlate with higher damping for stability\n        // This is a general rule but not absolute\n      })\n    })\n\n    test('spring presets should have appropriate characteristics', () => {\n      // Bouncy springs should have low damping relative to stiffness\n      const bounceRatio = springs.bounce.damping / springs.bounce.stiffness\n      const wobbleRatio = springs.wobbly.damping / springs.wobbly.stiffness\n      \n      expect(bounceRatio).toBeLessThan(0.1) // Very bouncy\n      expect(wobbleRatio).toBeLessThan(0.1) // Also bouncy\n      \n      // Slow/molasses should have high damping\n      expect(springs.slow.damping).toBeGreaterThan(50)\n      expect(springs.molasses.damping).toBeGreaterThan(100)\n      \n      // Gentle should be balanced\n      const gentleRatio = springs.gentle.damping / springs.gentle.stiffness\n      expect(gentleRatio).toBeGreaterThan(0.1)\n      expect(gentleRatio).toBeLessThan(0.15)\n    })\n  })\n\n  describe('Keyframe Animations', () => {\n    test('should have complete keyframe definitions', () => {\n      const expectedKeyframes = [\n        'fadeIn', 'fadeOut', 'fadeUp', 'fadeDown',\n        'slideInRight', 'slideInLeft', 'slideInUp', 'slideInDown',\n        'zoomIn', 'zoomOut', 'rotate', 'pulse', 'ping',\n        'bounce', 'float', 'wiggle', 'shake'\n      ]\n      \n      expectedKeyframes.forEach(keyframe => {\n        expect(keyframes).toHaveProperty(keyframe)\n        \n        const animation = keyframes[keyframe as keyof typeof keyframes]\n        expect(typeof animation).toBe('object')\n        \n        // Should have at least from/to or percentage keys\n        const keys = Object.keys(animation)\n        const hasFromTo = keys.includes('from') && keys.includes('to')\n        const hasPercentages = keys.some(key => key.includes('%') || /^\\d+$/.test(key))\n        \n        expect(hasFromTo || hasPercentages).toBe(true)\n      })\n    })\n\n    test('fade animations should manipulate opacity correctly', () => {\n      expect(keyframes.fadeIn.from.opacity).toBe(0)\n      expect(keyframes.fadeIn.to.opacity).toBe(1)\n      \n      expect(keyframes.fadeOut.from.opacity).toBe(1)\n      expect(keyframes.fadeOut.to.opacity).toBe(0)\n    })\n\n    test('slide animations should use appropriate transforms', () => {\n      expect(keyframes.slideInRight.from.transform).toBe('translateX(100%)')\n      expect(keyframes.slideInLeft.from.transform).toBe('translateX(-100%)')\n      expect(keyframes.slideInUp.from.transform).toBe('translateY(100%)')\n      expect(keyframes.slideInDown.from.transform).toBe('translateY(-100%)')\n      \n      // All slide animations should end at neutral position\n      expect(keyframes.slideInRight.to.transform).toBe('translateX(0)')\n      expect(keyframes.slideInLeft.to.transform).toBe('translateX(0)')\n      expect(keyframes.slideInUp.to.transform).toBe('translateY(0)')\n      expect(keyframes.slideInDown.to.transform).toBe('translateY(0)')\n    })\n\n    test('zoom animations should scale appropriately', () => {\n      expect(keyframes.zoomIn.from.transform).toBe('scale(0.5)')\n      expect(keyframes.zoomIn.to.transform).toBe('scale(1)')\n      \n      expect(keyframes.zoomOut.from.transform).toBe('scale(1)')\n      expect(keyframes.zoomOut.to.transform).toBe('scale(0.5)')\n    })\n\n    test('attention animations should have proper keyframe percentages', () => {\n      // Pulse should animate between full and partial opacity\n      expect(keyframes.pulse['0%, 100%'].opacity).toBe(1)\n      expect(keyframes.pulse['50%'].opacity).toBe(0.5)\n      \n      // Ping should scale up and fade out\n      expect(keyframes.ping['75%, 100%']).toEqual({\n        transform: 'scale(2)',\n        opacity: 0,\n      })\n      \n      // Bounce should have proper timing functions\n      expect(keyframes.bounce['0%, 100%']).toHaveProperty('animationTimingFunction')\n      expect(keyframes.bounce['50%']).toHaveProperty('animationTimingFunction')\n    })\n\n    test('float animation should have smooth vertical movement', () => {\n      expect(keyframes.float['0%, 100%'].transform).toBe('translateY(0)')\n      expect(keyframes.float['50%'].transform).toBe('translateY(-20px)')\n    })\n\n    test('wiggle and shake should have controlled movement', () => {\n      // Wiggle should rotate back and forth\n      expect(keyframes.wiggle['0%, 100%'].transform).toBe('rotate(-3deg)')\n      expect(keyframes.wiggle['50%'].transform).toBe('rotate(3deg)')\n      \n      // Shake should translate horizontally\n      expect(keyframes.shake['0%, 100%'].transform).toBe('translateX(0)')\n      expect(keyframes.shake['25%'].transform).toBe('translateX(-10px)')\n      expect(keyframes.shake['75%'].transform).toBe('translateX(10px)')\n    })\n  })\n\n  describe('Transitions', () => {\n    test('should have base transition configurations', () => {\n      expect(transitions.base).toBe(`all ${durations.normal}ms ${easings.premium}`)\n      expect(transitions.fast).toBe(`all ${durations.fast}ms ${easings.premium}`)\n      expect(transitions.slow).toBe(`all ${durations.slow}ms ${easings.premium}`)\n    })\n\n    test('should have property-specific transitions', () => {\n      expect(transitions.opacity).toBe(`opacity ${durations.normal}ms ${easings.premium}`)\n      expect(transitions.transform).toBe(`transform ${durations.normal}ms ${easings.premium}`)\n      expect(transitions.shadow).toBe(`box-shadow ${durations.normal}ms ${easings.premium}`)\n      \n      // Colors transition should include multiple properties\n      expect(transitions.colors).toContain('background-color')\n      expect(transitions.colors).toContain('border-color')\n      expect(transitions.colors).toContain('color')\n    })\n\n    test('should have utility transitions', () => {\n      expect(transitions.all).toContain('all')\n      expect(transitions.none).toBe('none')\n    })\n\n    test('transitions should use consistent timing', () => {\n      const transitionRegex = /(\\d+)ms/\n      \n      Object.entries(transitions).forEach(([name, value]) => {\n        if (name !== 'none' && typeof value === 'string') {\n          const match = value.match(transitionRegex)\n          if (match) {\n            const duration = parseInt(match[1])\n            \n            // Duration should be one of our defined durations\n            const validDurations = Object.values(durations).filter(d => typeof d === 'number')\n            expect(validDurations).toContain(duration)\n          }\n        }\n      })\n    })\n  })\n\n  describe('Animation Compositions', () => {\n    test('should have entrance animations', () => {\n      const entranceAnimations = ['fadeIn', 'fadeUp', 'slideIn', 'zoomIn']\n      \n      entranceAnimations.forEach(animation => {\n        expect(animations).toHaveProperty(animation)\n        \n        const animationValue = animations[animation as keyof typeof animations]\n        expect(animationValue).toContain(durations.normal.toString())\n        expect(animationValue).toContain('ms')\n      })\n    })\n\n    test('should have exit animations', () => {\n      const exitAnimations = ['fadeOut', 'slideOut', 'zoomOut']\n      \n      exitAnimations.forEach(animation => {\n        expect(animations).toHaveProperty(animation)\n        \n        const animationValue = animations[animation as keyof typeof animations]\n        // Exit animations should generally be faster\n        expect(animationValue).toContain(durations.fast.toString())\n      })\n    })\n\n    test('should have attention animations', () => {\n      const attentionAnimations = ['pulse', 'bounce', 'wiggle']\n      \n      attentionAnimations.forEach(animation => {\n        expect(animations).toHaveProperty(animation)\n        \n        const animationValue = animations[animation as keyof typeof animations]\n        expect(animationValue).toContain('infinite')\n      })\n    })\n\n    test('should have loading animations', () => {\n      expect(animations.spin).toContain('rotate')\n      expect(animations.spin).toContain('infinite')\n      expect(animations.spin).toContain('linear')\n      \n      expect(animations.ping).toContain('ping')\n      expect(animations.ping).toContain('infinite')\n    })\n  })\n\n  describe('Framer Motion Variants', () => {\n    test('should have page transition variants', () => {\n      expect(motionVariants).toHaveProperty('pageInitial')\n      expect(motionVariants).toHaveProperty('pageAnimate')\n      expect(motionVariants).toHaveProperty('pageExit')\n      \n      expect(motionVariants.pageInitial).toEqual({ opacity: 0, y: 20 })\n      expect(motionVariants.pageAnimate).toEqual({ opacity: 1, y: 0 })\n      expect(motionVariants.pageExit).toEqual({ opacity: 0, y: -20 })\n    })\n\n    test('should have modal transition variants', () => {\n      expect(motionVariants).toHaveProperty('overlayInitial')\n      expect(motionVariants).toHaveProperty('overlayAnimate')\n      expect(motionVariants).toHaveProperty('overlayExit')\n      \n      expect(motionVariants).toHaveProperty('modalInitial')\n      expect(motionVariants).toHaveProperty('modalAnimate')\n      expect(motionVariants).toHaveProperty('modalExit')\n      \n      // Modal should scale from 0.95 to 1\n      expect(motionVariants.modalInitial.scale).toBe(0.95)\n      expect(motionVariants.modalAnimate.scale).toBe(1)\n      expect(motionVariants.modalExit.scale).toBe(0.95)\n    })\n\n    test('should have stagger animation variants', () => {\n      expect(motionVariants).toHaveProperty('listContainer')\n      expect(motionVariants).toHaveProperty('listItem')\n      \n      const container = motionVariants.listContainer\n      expect(container.visible).toHaveProperty('transition')\n      expect(container.visible.transition).toHaveProperty('staggerChildren')\n      expect(container.visible.transition).toHaveProperty('delayChildren')\n      \n      const item = motionVariants.listItem\n      expect(item.hidden).toEqual({ y: 20, opacity: 0 })\n      expect(item.visible).toHaveProperty('y', 0)\n      expect(item.visible).toHaveProperty('opacity', 1)\n      expect(item.visible.transition).toHaveProperty('type', 'spring')\n    })\n\n    test('stagger timing should be reasonable', () => {\n      const container = motionVariants.listContainer\n      const staggerChildren = container.visible.transition.staggerChildren\n      const delayChildren = container.visible.transition.delayChildren\n      \n      expect(staggerChildren).toBeGreaterThan(0)\n      expect(staggerChildren).toBeLessThan(0.5) // Not too slow\n      \n      expect(delayChildren).toBeGreaterThanOrEqual(0)\n      expect(delayChildren).toBeLessThan(1) // Reasonable initial delay\n    })\n  })\n\n  describe('Animation Utility Functions', () => {\n    test('createTransition should generate valid CSS transitions', () => {\n      const basicTransition = createTransition()\n      expect(basicTransition).toBe(`all ${durations.normal}ms ${easings.premium}`)\n      \n      const customTransition = createTransition('opacity', durations.fast, easings.ease)\n      expect(customTransition).toBe(`opacity ${durations.fast}ms ${easings.ease}`)\n    })\n\n    test('createTransition should handle delay parameter', () => {\n      const delayedTransition = createTransition('transform', durations.normal, easings.premium, 100)\n      expect(delayedTransition).toBe(`transform ${durations.normal}ms ${easings.premium} 100ms`)\n      \n      const noDelayTransition = createTransition('transform', durations.normal, easings.premium, 0)\n      expect(noDelayTransition).toBe(`transform ${durations.normal}ms ${easings.premium}`)\n    })\n\n    test('createStaggerDelay should calculate delays correctly', () => {\n      expect(createStaggerDelay(0)).toBe(0)\n      expect(createStaggerDelay(1)).toBe(durations.stagger.normal)\n      expect(createStaggerDelay(2)).toBe(durations.stagger.normal * 2)\n      expect(createStaggerDelay(3, 50)).toBe(150) // 3 * 50ms\n    })\n\n    test('generateAnimationVars should create CSS custom properties', () => {\n      const vars = generateAnimationVars()\n      \n      // Should include duration variables\n      expect(vars).toHaveProperty('--ds-anim-duration-fast', '150ms')\n      expect(vars).toHaveProperty('--ds-anim-duration-normal', '300ms')\n      \n      // Should include easing variables\n      expect(vars).toHaveProperty('--ds-anim-ease-premium', easings.premium)\n      expect(vars).toHaveProperty('--ds-anim-ease-linear', 'linear')\n      \n      const varCount = Object.keys(vars).length\n      expect(varCount).toBeGreaterThan(20)\n    })\n\n    test('generateAnimationVars should accept custom prefix', () => {\n      const vars = generateAnimationVars('--custom-anim')\n      \n      expect(vars).toHaveProperty('--custom-anim-duration-fast', '150ms')\n      expect(vars).toHaveProperty('--custom-anim-ease-premium', easings.premium)\n    })\n  })\n\n  describe('Performance Considerations', () => {\n    test('animation objects should be frozen/immutable', () => {\n      expect(Object.isFrozen(durations)).toBe(true)\n      expect(Object.isFrozen(easings)).toBe(true)\n      expect(Object.isFrozen(springs)).toBe(true)\n      expect(Object.isFrozen(keyframes)).toBe(true)\n      expect(Object.isFrozen(transitions)).toBe(true)\n      expect(Object.isFrozen(animations)).toBe(true)\n      expect(Object.isFrozen(motionVariants)).toBe(true)\n    })\n\n    test('durations should not exceed performance thresholds', () => {\n      Object.values(durations).forEach(duration => {\n        if (typeof duration === 'number') {\n          // No animation should be longer than 1.2 seconds for UX\n          expect(duration).toBeLessThanOrEqual(1200)\n          \n          // No animation should be shorter than 50ms (imperceptible)\n          if (duration > 0) {\n            expect(duration).toBeGreaterThanOrEqual(50)\n          }\n        }\n      })\n    })\n\n    test('animation functions should be performant', () => {\n      const startTime = performance.now()\n      \n      for (let i = 0; i < 1000; i++) {\n        createTransition('opacity', durations.fast, easings.premium)\n        createStaggerDelay(i % 10)\n      }\n      \n      const endTime = performance.now()\n      const duration = endTime - startTime\n      \n      // Should complete 2000 calls in under 50ms\n      expect(duration).toBeLessThan(50)\n    })\n\n    test('spring physics should prevent infinite oscillation', () => {\n      Object.entries(springs).forEach(([name, config]) => {\n        // Calculate damping ratio to ensure system stability\n        const dampingRatio = config.damping / (2 * Math.sqrt(config.stiffness))\n        \n        // Should not be underdamped to the point of being annoying\n        // Critically damped (dampingRatio = 1) or slightly underdamped is ideal\n        expect(dampingRatio).toBeGreaterThan(0.1) // Prevent extreme oscillation\n        \n        // Should not be overdamped to the point of being sluggish\n        expect(dampingRatio).toBeLessThan(3) // Prevent over-damping\n      })\n    })\n  })\n\n  describe('Type Safety', () => {\n    test('animation types should be properly defined', () => {\n      const duration: Duration = 'normal'\n      expect(durations[duration]).toBe(300)\n      \n      const easing: Easing = 'premium'\n      expect(easings[easing]).toBe('cubic-bezier(0.4, 0.0, 0.2, 1)')\n      \n      const spring: Spring = 'default'\n      expect(springs[spring]).toEqual({ stiffness: 170, damping: 26 })\n      \n      const animation: Animation = 'fadeIn'\n      expect(animations[animation]).toContain('fadeIn')\n      \n      const transition: Transition = 'base'\n      expect(transitions[transition]).toContain('all')\n    })\n\n    test('should prevent invalid animation values at compile time', () => {\n      // These would fail TypeScript compilation if uncommented\n      // @ts-expect-error\n      const invalidDuration: Duration = 'invalid'\n      \n      // @ts-expect-error\n      const invalidEasing: Easing = 'invalid'\n      \n      // @ts-expect-error\n      const invalidSpring: Spring = 'invalid'\n    })\n  })\n\n  describe('Mathematical Validation', () => {\n    test('duration progression should follow mathematical ratios', () => {\n      // Check golden ratio or fibonacci-like progression in some durations\n      const fastToNormal = durations.normal / durations.fast      // 300/150 = 2\n      const normalToSlow = durations.slow / durations.normal      // 500/300 = 1.67\n      \n      expect(fastToNormal).toBeCloseTo(2, 0)\n      expect(normalToSlow).toBeCloseTo(1.67, 1)\n    })\n\n    test('stagger delays should create pleasing rhythms', () => {\n      const staggerValues = Object.values(durations.stagger)\n      \n      // Should increase by reasonable increments\n      expect(durations.stagger.normal - durations.stagger.fast).toBe(50)\n      expect(durations.stagger.slow - durations.stagger.normal).toBe(50)\n      \n      // Total stagger time for 5 items should be reasonable\n      const fiveItemStagger = createStaggerDelay(4, durations.stagger.normal)\n      expect(fiveItemStagger).toBe(400) // Should complete within 400ms\n      expect(fiveItemStagger).toBeLessThan(durations.slow)\n    })\n  })\n})"],"names":["describe","test","expectedDurations","forEach","duration","expect","durations","toHaveProperty","toBe","instant","fast","normal","slow","slower","slowest","durationValues","i","length","toBeGreaterThan","stagger","frameTime","Object","values","toBeGreaterThanOrEqual","toBeLessThanOrEqual","easings","linear","ease","easeIn","easeOut","easeInOut","customEasings","easing","toMatch","premium","bounceIn","springEasings","powerEasings","power1","power4","entries","filter","key","value","startsWith","name","curve","match","split","map","v","parseFloat","trim","toHaveLength","expectedSprings","spring","springs","springConfig","stiffness","damping","config","toBeLessThan","bounceRatio","bounce","wobbleRatio","wobbly","molasses","gentleRatio","gentle","expectedKeyframes","keyframe","keyframes","animation","keys","hasFromTo","includes","hasPercentages","some","fadeIn","from","opacity","to","fadeOut","slideInRight","transform","slideInLeft","slideInUp","slideInDown","zoomIn","zoomOut","pulse","ping","toEqual","float","wiggle","shake","transitions","base","shadow","colors","toContain","all","none","transitionRegex","parseInt","validDurations","d","entranceAnimations","animations","animationValue","toString","exitAnimations","attentionAnimations","spin","motionVariants","pageInitial","y","pageAnimate","pageExit","modalInitial","scale","modalAnimate","modalExit","container","listContainer","visible","transition","item","listItem","hidden","staggerChildren","delayChildren","basicTransition","createTransition","customTransition","delayedTransition","noDelayTransition","createStaggerDelay","vars","generateAnimationVars","varCount","isFrozen","startTime","performance","now","endTime","dampingRatio","Math","sqrt","invalidDuration","invalidEasing","invalidSpring","fastToNormal","normalToSlow","toBeCloseTo","staggerValues","fiveItemStagger"],"mappings":"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"}